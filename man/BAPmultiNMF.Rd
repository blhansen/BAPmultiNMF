% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BAPmultiNMF.R
\name{BAPmultiNMF}
\alias{BAPmultiNMF}
\title{Coordinate Ascent Variational Inference for Bayesian Probit Multi-Study NMF}
\usage{
BAPmultiNMF(
  M_s,
  x_s = NULL,
  R = 5,
  hyperparameters = NULL,
  P_recover = NULL,
  recover_weights = 1e+08,
  tol = 1e-06,
  min_iter = 10,
  max_iter = 10000,
  verbose = TRUE
)
}
\arguments{
\item{M_s}{A list of length \eqn{S}, containing counts matrices of dimensions \eqn{K \times N_s}.}

\item{x_s}{A list of length \eqn{S}, containing covariate matrices of dimensions \eqn{N_s \times D_s}, where \eqn{D_s} is the number of covariates in study s. If no covariates are provided, an intercept will be used for each study.}

\item{R}{The number of discovered signatures. Default is 5.}

\item{hyperparameters}{A list containing hyperparameter values. The components are:
\describe{
\item{alpha_p}{Dirichlet concentration parameter of dimension K for p(P_r). Default is 1.}
\item{e_conc}{Dirichlet concentration value for exposures when a=1. Default is 5.}
\item{e_conc_null}{Dirichlet concentration value for exposures when a=0. Default is 1.}
\item{tau_s_shape}{Gamma shape parameter for p(tau_s). Default is 0.1.}
\item{taue_s_rate}{Gamma rate parameter for p(tau_s). Default is 0.1.}
\item{beta_prior}{Prior mean of beta_s for the intercept term. Default corresponds to 0.1 baseline probability.}
}}

\item{P_recover}{A matrix of dimensions \eqn{K \times R_{recover}}, containing previously known signatures to be recovered.}

\item{recover_weights}{Either a single value or list of values of length \eqn{R_{recover}}, controlling the strength of the recovery prior. Higher values correspond to a more informative prior.}

\item{tol}{Convergence criteria. Default is 1e-6.}

\item{min_iter}{Minimum number of CAVI iterations. Default is 10.}

\item{max_iter}{Maximum number of CAVI iterations. Default is 1000.}

\item{verbose}{Logical value determining if the convergence criteria should be printed at each iteration. Default is TRUE.}
}
\value{
A list  containing the the relevant parameters of the mean-field approximation.  The components of the list are:
\item{\code{p_conc}}{A matrix containing the variational dirichlet concentration for the signatues matrix.}
\item{\code{e_conc}}{A list of length S, where each entry is a matrix containing the variational dirichlet concentration for the exposures matrix.}
\item{\code{a_prob}}{A list of length S, where each entry is a nested list of lengths N_s, R containing the variational inclusion probabilities for each subject and signature.}
\item{\code{a_star_mean}}{A list of length S, where each entry is a matrix of dimension \eqn{R \times N_s}, containing the variational posterior means for a_star.}
\item{\code{mean_beta}}{A list of length S, where each entry is a list of length R, containing the variational mean for beta_s.}
\item{\code{var_beta}}{A list of length S, where each entry is a list of length R, containing the variational variance for beta_s.}
\item{\code{W_s}}{A list of length S, where each entry is a list of length N_s, containing the total mutation counts.}
\item{\code{priors}}{The list of hyperparameter values used.}
}
\description{
The function implements the CAVI algorithm described in Hansen et al. (2025+)
The code will return the relevant parameters of the mean-field
approximation described in the main paper.
}
\examples{
# Generate Data
S <- 3
R <- 5
K <- 20
N_s <- c(50, 60, 70)

P <- rdirichlet(R, rep(1/K, K))
E_s <- lapply(1:S, function(s){t(rdirichlet(N_s[s], rgamma(K, shape = 1, rate=0.5)))})
M_s <- lapply(1:S, function(s) matrix(rpois(N_s[s]*K, 500*(P \%*\% E_s[[s]])), nrow=K, ncol=N_s[s]))

# Run CAVI
BAPmultiNMF(M_s=M_s, R=5)

}
\references{
Hansen, B., Grabski, I. N., Parmigiani, G.,  De Vito, R. (2025+).
Bayesian Probit Multi-Study Non-negative Matrix Factorization for Mutational Signatures.
Submitted manuscript.
}
